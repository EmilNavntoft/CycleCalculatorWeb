@using CycleCalculator.CycleModel.Model
@using CycleCalculator.CycleModel.Model.Enums
<div class="sideBar">
	<h5 class="title">Components</h5>
	<div class="container">
		<button class="addComponentButton" @onclick=@(_ => AddComponentClicked(CycleComponentType.Compressor))>
			<svg class="buttonIcon">
				<CycleCalculatorWeb.GUI.SVG.Compressor Xoffset="-50" Yoffset="-25" />
			</svg>
			<h6 class="componentName">Compressor</h6>
		</button>
		<button class="addComponentButton" @onclick=@(_ => AddComponentClicked(CycleComponentType.Valve))>
			<svg class="buttonIcon">
				<CycleCalculatorWeb.GUI.SVG.Valve Xoffset="-50" Yoffset="-25" />
			</svg>
			<h6 class="componentName">PRV</h6>
		</button>
		<button class="addComponentButton" @onclick=@(_ => AddComponentClicked(CycleComponentType.TemperatureBoundary))>
			<svg class="buttonIcon">
				<CycleCalculatorWeb.GUI.SVG.InlineBoundary Xoffset="-50" Yoffset="-25" />
			</svg>
			<h6 class="componentName">Temperature Boundary</h6>
		</button>
		<button class="addComponentButton" @onclick=@(_ => AddComponentClicked(CycleComponentType.HeatFlowBoundary))>
			<svg class="buttonIcon">
				<CycleCalculatorWeb.GUI.SVG.InlineBoundary Xoffset="-50" Yoffset="-25" />
			</svg>
			<h6 class="componentName">Heat flow Boundary</h6>
		</button>
		<button class="addComponentButton" @onclick=@(_ => AddComponentClicked(CycleComponentType.TeeSection))>
			<svg class="buttonIcon">
				<CycleCalculatorWeb.GUI.SVG.Tee Xoffset="-50" Yoffset="-25" />
			</svg>
			<h6 class="componentName">Tee</h6>
		</button>
		<button class="addComponentButton" @onclick=@(_ => AddComponentClicked(CycleComponentType.Sensor))>
			<svg class="buttonIcon">
				<CycleCalculatorWeb.GUI.SVG.Sensor Xoffset="-50" Yoffset="-25" />
			</svg>
			<h6 class="componentName">Sensor</h6>
		</button>
	</div>
</div>


@code {
	[Parameter]
	public EventCallback<CycleComponentType> OnAddComponentClicked { get; set; }

	private void AddComponentClicked(CycleComponentType type)
	{
		OnAddComponentClicked.InvokeAsync(type);
	}
}
